!/bin/bash

############################
## Parameter setting starts

ncore=

srr=
# SRR id
# e.g., SRR13168858

sample=
# sample name
# e.g., hek293.polya.ftom.rep1

cutout_dir=
# Output directory for clean reads

align_dir=
# Output directory for alignment results

star_index=
# STAR index directory

star_index_name=
# star index name prefix
# e.g., GRCh38

ref_dir=

gtf_file=
# e.g., Homo_sapiens.GRCh38.110.gtf

sample_fa_file=${cutout_dir}/${sample}.R1.clean.fa

## Parameter setting ends
############################

echo "Start mapping for m6A-SAC-seq paired-end sequencing data ......"
echo Starting Time is `date "+%Y-%m-%d %H:%M:%S"`
start=$(date +%s)

echo "Start mapping for ${srr}"

if [[ ! -d ${align_dir} ]];then mkdir -p ${align_dir};fi

echo -e "\nstar align -- genome mapping\n"
STAR --genomeDir ${star_index} --readFilesIn ${sample_fa_file}         \
    --outFileNamePrefix ${align_dir}/ \
    --runThreadN ${ncore} --genomeLoad NoSharedMemory     \
    --sjdbGTFfile ${ref_dir}/${gtf_file}        \
    --outFilterMultimapNmax 20 --alignSJoverhangMin 8 --alignSJDBoverhangMin 1    \
    --outFilterMismatchNmax 999 --outFilterMismatchNoverReadLmax 0.06              \
    --alignIntronMin 20 --alignIntronMax 1000000 --alignMatesGapMax 1000000         \
    --outSAMunmapped None --outFilterType BySJout --outSAMattributes NH HI AS NM MD \
    --outSAMtype BAM SortedByCoordinate --quantMode TranscriptomeSAM --sjdbScore 1 --limitBAMsortRAM 11498206647 \
    --outWigType bedGraph --outWigStrand Stranded --outSAMstrandField None --outWigReferencesPrefix chr

samtools view -@ ${ncore} -F 1548 -Shub ${align_dir}/Aligned.sortedByCoord.out.bam | samtools sort -T ${align_dir}/ -@ ${ncore} -o ${align_dir}/${sample}.${star_index_name}.align.sorted.bam -

echo -e "\nsamtools index\n"
samtools index ${align_dir}/${sample}.${star_index_name}.align.sorted.bam

echo -e "\nsamtools flagstat\n"
samtools flagstat ${align_dir}/${sample}.${star_index_name}.align.sorted.bam > ${align_dir}/${sample}.${star_index_name}.align.sorted.flagstat.qc

wait

echo Ending Time is `date "+%Y-%m-%d %H:%M:%S"`
end=$(date +%s)
time=$(( ($end - $start) / 60 ))
echo Used Time is $time mins